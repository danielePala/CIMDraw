/*
 Topology processor user interface.

 Copyright 2017-2021 Daniele Pala (pala.daniele@gmail.com)

 This file is part of CIMDraw.

 CIMDraw is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 CIMDraw is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with CIMDraw. If not, see http://www.gnu.org/licenses/.
*/

<cimTopologyProcessor>
    <style>
        #cim-topology-processor { display: none }
    </style>

    <!-- Topology processor button -->
    <ul class="me-auto mb-2 mb-lg-0 navbar-nav" id="cim-topology-processor">
        <li class="nav-item dropdown">
            <a id="tpDropdown" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" role="button" aria-expanded="false">
                Topology Processor
            </a>
            <ul class="dropdown-menu" aria-labelledby="tpDropdown">
                <li><a class="dropdown-item" id="runLabel" onclick={ run }>Run</a></li>
            </div>
        </li>
    </ul>

    <!-- modal for topology processor info -->
    <div class="modal fade" id="tpStatusModal" tabindex="-1" aria-labelledby="tpStatusModalLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="tpStatusModalLabel">Topology processor results</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="tpMsg">Loading...</p>
                </div>
            </div>
        </div>
    </div>

    <script>
    let self = null;

    export default {
        onBeforeMount(props, state) {
            self = this;
            props.dispatcher.on("diagrams", function() {
                document.querySelector("#cim-topology-processor").style.display = "flex";
            });
        },

        run(e) {
            const tpMsg = document.querySelector("#tpMsg");
            const tpStatusEl = document.getElementById("tpStatusModal");
            const tpStatusModal = new bootstrap.Modal(tpStatusEl);
            tpMsg.textContent = "Loading...";
            tpStatusModal.show();
            tpStatusEl.addEventListener("shown.bs.modal", function (event) {
                let topos = topologyProcessor(self.props.model).calcTopology();
                tpMsg.textContent = "Done (" + topos.length + " nodes calculated).";
            });
        }
    }
    </script>

</cimTopologyProcessor>
